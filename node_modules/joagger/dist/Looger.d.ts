import { IHandler } from "./Handlers/AbstractHandler";
export declare const LogLevels: {
    DEBUG: {
        name: string;
        wight: number;
    };
    INFO: {
        name: string;
        wight: number;
    };
    NOTICE: {
        name: string;
        wight: number;
    };
    WARNING: {
        name: string;
        wight: number;
    };
    ERROR: {
        name: string;
        wight: number;
    };
    CRITICAL: {
        name: string;
        wight: number;
    };
    ALERT: {
        name: string;
        wight: number;
    };
    EMERGENCY: {
        name: string;
        wight: number;
    };
};
export interface ILogger {
    setHandlers(handlers: Array<IHandler>): void;
    pushHandler(handler: IHandler): void;
    debug(message: string, context?: any, extra?: any): void;
    info(message: string, context?: any, extra?: any): void;
    notice(message: string, context?: any, extra?: any): void;
    warning(message: string, context?: any, extra?: any): void;
    error(message: string, context?: any, extra?: any): void;
    critical(message: string, context?: any, extra?: any): void;
    alert(message: string, context?: any, extra?: any): void;
    emergency(message: string, context?: any, extra?: any): void;
}
export declare class Logger implements ILogger {
    private readonly _channel;
    private handlers;
    constructor(channel: string);
    setHandlers(handlers: Array<IHandler>): void;
    private _log;
    pushHandler(handler: IHandler): void;
    alert(message: string, context?: any, extra?: any): void;
    critical(message: string, context?: any, extra?: any): void;
    debug(message: string, context?: any, extra?: any): void;
    emergency(message: string, context?: any, extra?: any): void;
    error(message: string, context?: any, extra?: any): void;
    info(message: string, context?: any, extra?: any): void;
    notice(message: string, context?: any, extra?: any): void;
    warning(message: string, context?: any, extra?: any): void;
}
export interface LoggerList<T extends ILogger> {
    [key: string]: T;
}
export declare class LoggerFactory {
    private static logsList;
    static create(name: string, handlers?: IHandler[]): ILogger;
    private static make;
}
export declare function logger(channel?: string, handlers?: Array<IHandler>): ILogger;
